int led1 = A5; 
int led2 = D7;

int photoresistor = A0;
int LightStatus;
String sendData;

void setup() {

  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(photoresistor, INPUT);

}

// Next we have the loop function, the other essential part of a microcontroller program.
// This routine gets repeated over and over, as quickly as possible and as many times as possible, after the setup function is called.
// Note: Code that blocks for too long (like more than 5 seconds), can make weird things happen (like dropping the network connection).  The built-in delay function shown below safely interleaves required background activity, so arbitrarily long delays can safely be done if you need them.

void loop() {
    delay(3000);
    LightStatus = analogRead(photoresistor);
    float light = LightStatus;
    sendData = String::format("Light", light );
    Particle.publish("LightStatus", sendData);
    
    if (LightStatus < 50) {
        digitalWrite(led1, LOW);
        digitalWrite(led2, LOW);
        Particle.publish("LightStatus", "Dark");
        
    } else {
        digitalWrite(led1, HIGH);
        digitalWrite(led2, HIGH);
        Particle.publish("LightStatus", "Light");  
    }
}
